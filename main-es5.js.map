{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","$event","stopPropagation","selection","AppComponent","snackBar","title","isLoading","displayedColumns","dataSource","SAMPLE_DATA","sort","open","horizontalPosition","element","document","getElementById","ws","table_to_sheet","wb","book_new","book_append_sheet","Date","toISOString","split","numSelected","selected","length","numRows","data","isAllSelected","clear","forEach","row","select","isSelected","position","exportExcel","selector","templateUrl","styleUrls","name","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBA;;;;;;;;AAgDQ;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,qIAAmD,eAAnD,EAAmD,wDAAnD,EAAmD,YAAnD,EAAmD,uBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASC,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,mHAAqC,YAArC,EAAqC,8BAArC;;;;;;AAMhB;;AAAuD;;AAAI;;;;;;AAC3D;;AAAqC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIvC;;;;;;;;AACA;;AAA6D;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AAAgC;;;;;;AA7BnG;;AACE;;AAKI;;AACE;;AAOA;;AAOF;;AACA;;AACE;;AACA;;AACF;;AAGA;;AACA;;AACF;;AACJ;;;;;;AA9BgD;;AAAA;;AA2BvB;;AAAA,8GAAiD,uBAAjD,EAAiD,IAAjD;;AACP;;AAAA;;;;QD3ELC,Y;;;AAUX,4BACUC,QADV,EAC+B;AAAA;;AAArB,aAAAA,QAAA,GAAAA,QAAA;AAVV,aAAAC,KAAA,GAAQ,KAAR;AACA,aAAAC,SAAA,GAAY,KAAZ;AAEA,aAAAC,gBAAA,GAA6B,CAAC,QAAD,EAAU,MAAV,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuBC,WAAvB,CAAb;AACA,aAAAP,SAAA,GAAY,IAAI,uEAAJ,CAAwB,IAAxB,EAA8B,EAA9B,CAAZ;AAMI;;;;mCAEO;AACT,eAAKM,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,eAAKN,QAAL,CAAcO,IAAd,CAAmB,mDAAnB,EACE,IADF,EACQ;AAAEC,8BAAkB,EAAE;AAAtB,WADR;AAED;;;sCAEa;AACZ;AACA,cAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAd;AACA,cAAMC,EAAE,GAAkB,2CAAWC,cAAX,CAA0BJ,OAA1B,CAA1B;AAEA;;AACA,cAAMK,EAAE,GAAkB,2CAAWC,QAAX,EAA1B;AACA,qDAAWC,iBAAX,CAA6BF,EAA7B,EAAiCF,EAAjC,EAAqC,eAArC;AAEA;;AACA,yDAAeE,EAAf,YAAsB,KAAKb,KAA3B,cAAoC,IAAIgB,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAApC;AACD;AAED;;;;wCACgB;AACd,cAAMC,WAAW,GAAG,KAAKtB,SAAL,CAAeuB,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKnB,UAAL,CAAgBoB,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAK3B,SAAL,CAAe4B,KAAf,EADJ,GAEI,KAAKtB,UAAL,CAAgBoB,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,KAAI,CAAC9B,SAAL,CAAe+B,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAS;AACrB,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAK3B,SAAL,CAAegC,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACG,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBArDUhC,Y,EAAY,wI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA;AAAA;0EAQZ,8D,EAAS,I;;;;;;;;;;;;;;ACpBtB;;AACE;;AAAoB;;AAAI;;AAAQ;;AAEhC;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAAmB;;AAAE;;AACrB;;AAEA;;AAAuE;AAAA,mBAAS,IAAAiC,WAAA,EAAT;AAAsB,WAAtB;;AACrE;;AAAU;;AAAO;;AACnB;;AACA;;AACE;;AAAU;;AAAe;;AAC3B;;AACF;;AACA;;AAEA;;AAEE;;AAEA;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AAAkC;;AAAK;;AAAI;;AAAQ;;AACnD;;AAA0B;;AAAkB;;AAC5C;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;;;AAzCkB;;AAAA;;AAyCQ;;AAAA;;;;;;;;;sED9CbjC,Y,EAAY;cALxB,uDAKwB;eALd;AACTkC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;gBAQtB,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;AAgDtB,QAAM9B,WAAW,GAAG,CAAC;AAAC+B,UAAI,EAAC;AAAN,KAAD,CAApB;;;;;;;;;;;;;;;;AEpmEaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBArCJ,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAVO,EAWP,4FAXO,EAYP,4DAZO,EAaP,0DAbO,EAcP,qEAdO,EAeP,wEAfO,EAgBP,sEAhBO,EAiBP,qFAjBO,EAkBP,gFAlBO,EAmBP,qEAnBO,EAoBP,2EApBO,EAqBP,2EArBO,EAsBP,qEAtBO,EAuBP,8EAvBO,EAwBP,qEAxBO,EAyBP,sFAzBO,EA0BP,uEA1BO,EA2BP,qEA3BO,EA4BP,oFA5BO,EA6BP,yEA7BO,EA8BP,2EA9BO,EA+BP,8EA/BO,EAgCP,uEAhCO,EAiCP,qEAjCO,EAkCP,4EAlCO,EAmCP,+EAnCO,CAqCI;;;;0HAGFA,S,EAAS;AAAA,uBA1ClB,2DA0CkB;AA1CN,kBAGZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAZY,EAaZ,4FAbY,EAcZ,4DAdY,EAeZ,0DAfY,EAgBZ,qEAhBY,EAiBZ,wEAjBY,EAkBZ,sEAlBY,EAmBZ,qFAnBY,EAoBZ,gFApBY,EAqBZ,qEArBY,EAsBZ,2EAtBY,EAuBZ,2EAvBY,EAwBZ,qEAxBY,EAyBZ,8EAzBY,EA0BZ,qEA1BY,EA2BZ,sFA3BY,EA4BZ,uEA5BY,EA6BZ,qEA7BY,EA8BZ,oFA9BY,EA+BZ,yEA/BY,EAgCZ,2EAhCY,EAiCZ,8EAjCY,EAkCZ,uEAlCY,EAmCZ,qEAnCY,EAoCZ,4EApCY,EAqCZ,+EArCY;AA0CM,O;AALA,K;;;;;sEAKTA,S,EAAS;cA5CrB,sDA4CqB;eA5CZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAVO,EAWP,4FAXO,EAYP,4DAZO,EAaP,0DAbO,EAcP,qEAdO,EAeP,wEAfO,EAgBP,sEAhBO,EAiBP,qFAjBO,EAkBP,gFAlBO,EAmBP,qEAnBO,EAoBP,2EApBO,EAqBP,2EArBO,EAsBP,qEAtBO,EAuBP,8EAvBO,EAwBP,qEAxBO,EAyBP,sFAzBO,EA0BP,uEA1BO,EA2BP,qEA3BO,EA4BP,oFA5BO,EA6BP,yEA7BO,EA8BP,2EA9BO,EA+BP,8EA/BO,EAgCP,uEAhCO,EAiCP,qEAjCO,EAkCP,4EAlCO,EAmCP,+EAnCO,CAJD;AAyCRC,mBAAS,EAAE,EAzCH;AA0CRC,mBAAS,EAAE,CAAC,2DAAD;AA1CH,S;AA4CY,Q;;;;;;;;;;;;;;;;;;ACrFtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as XLSX from 'xlsx';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = '楓林晚';\n  isLoading = false;\n\n  displayedColumns: string[] = ['select','name'];\n  dataSource = new MatTableDataSource(SAMPLE_DATA);\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.snackBar.open('本網站使用cookies以提昇您的使用體驗及統計。繼續使用本網站表示您同意我們使用cookies。', \n      '同意', { horizontalPosition: 'right'});\n  }\n\n  exportExcel() {\n    /* table id is passed over here */\n    let element = document.getElementById('main-data-table');\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Exported Data');\n\n    /* save to file */\n    XLSX.writeFile(wb, `${this.title}-${new Date().toISOString().split('T')[0]}.xlsx` );\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n\nconst SAMPLE_DATA = [{name:'Game of Thrones'}];\n","<mat-toolbar color=\"primary\">\n  <span class=\"title\">楓林晚 </span> &nbsp;\n\n  <button mat-button>電影</button>\n  <button mat-button>台劇</button>\n  <button mat-button>美劇</button>\n  <button mat-button>陸劇</button>\n  <button mat-button>日劇</button>\n  <span class=\"fill-remaining-space\"></span>\n\n  <button mat-icon-button class=\"toolbar-item\" matTooltip=\"Export Excel\" (click)=\"exportExcel()\">\n    <mat-icon>grid_on</mat-icon>\n  </button>\n  <button mat-icon-button class=\"toolbar-item\" matTooltip=\"Donate\">\n    <mat-icon>insert_emoticon</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n\n<header>\n  <!-- BACKGROUND IMAGE -->\n  <div class=\"background hero\"></div>\n  <!-- INTRO SECTION -->\n  <section id=\"intro\">\n    <!-- LOGO -->\n    <div class=\"hero-logo\">\n      <img src=\"assets/images/logo.svg\" alt=\"Logo\" width=\"250\" height=\"250\">\n    </div>\n    <!-- CONTAINER -->\n    <div class=\"homepage-container\">\n      <div class=\"hero-headline no-toc\">支持正版，<br>才有更棒的作品。</div>\n      <div class=\"hero-subline\">在這裡找尋您想看的影劇的所有合法片源</div>\n      <div class=\"hero-providers\">\n        <img src=\"assets/images/providers/1.jpg\" alt=\"Netflix\" matTooltip=\"Netflix\" class=\"provider\">\n        <img src=\"assets/images/providers/2.jpg\" alt=\"LINE TV\" matTooltip=\"LINE TV\" class=\"provider\">\n        <img src=\"assets/images/providers/3.jpg\" alt=\"愛奇藝台灣站\" matTooltip=\"愛奇藝台灣站\" class=\"provider\">\n        <img src=\"assets/images/providers/4.jpg\" alt=\"HBO GO\" matTooltip=\"HBO GO\" class=\"provider\">\n        <img src=\"assets/images/providers/5.jpg\" alt=\"KKTV\" matTooltip=\"KKTV\" class=\"provider\">\n        <img src=\"assets/images/providers/6.jpg\" alt=\"Apple TV+\" matTooltip=\"Apple TV+\" class=\"provider\">\n        <img src=\"assets/images/providers/7.jpg\" alt=\"GagaOOLala\" matTooltip=\"GagaOOLala\" class=\"provider\">\n        <img src=\"assets/images/providers/8.jpg\" alt=\"iTunes\" matTooltip=\"iTunes\" class=\"provider\">\n        <img src=\"assets/images/providers/9.jpg\" alt=\"YouTube\" matTooltip=\"YouTube\" class=\"provider\">\n        <img src=\"assets/images/providers/10.jpg\" alt=\"Google Play電影\" matTooltip=\"Google Play電影\" class=\"provider\">\n        <img src=\"assets/images/providers/11.jpg\" alt=\"CATCHPLAY+\" matTooltip=\"CATCHPLAY+\" class=\"provider\">\n        <img src=\"assets/images/providers/12.jpg\" alt=\"friDay影音\" matTooltip=\"friDay影音\" class=\"provider\">\n        <img src=\"assets/images/providers/13.jpg\" alt=\"Hami Video\" matTooltip=\"Hami Video\" class=\"provider\">\n        <img src=\"assets/images/providers/14.jpg\" alt=\"公視+\" matTooltip=\"公視+\" class=\"provider\">\n        <img src=\"assets/images/providers/15.jpg\" alt=\"LiTV立視線上影視\" matTooltip=\"LiTV立視線上影視\" class=\"provider\">\n        <img src=\"assets/images/providers/16.jpg\" alt=\"myVideo\" matTooltip=\"myVideo\" class=\"provider\">\n        <img src=\"assets/images/providers/17.jpg\" alt=\"Vidol影音\" matTooltip=\"Vidol影音\" class=\"provider\">\n        <img src=\"assets/images/providers/18.jpg\" alt=\"WeTV\" matTooltip=\"WeTV\" class=\"provider\">\n        <img src=\"assets/images/providers/19.jpg\" alt=\"四季線上影視\" matTooltip=\"四季線上影視\" class=\"provider\">\n        <img src=\"assets/images/providers/20.jpg\" alt=\"酷瞧\" matTooltip=\"酷瞧\" class=\"provider\">\n      </div>\n    </div>\n  </section>\n</header>\n\n<div class=\"main-content\" *ngIf=\"false\">\n  <table id=\"main-data-table\" mat-table matSort [dataSource]=\"dataSource\">\n    <!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\n        <td mat-cell *matCellDef=\"let item\"> {{item.name}}</td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\"></tr>\n    </table>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//Angular Material Components\n// import {MatDatepickerModule} from '@angular/material/datepicker';\n// import {MatRadioModule} from '@angular/material/radio';\n// import {MatSelectModule} from '@angular/material/select';\n// import {MatSliderModule} from '@angular/material/slider';\n// import {MatSlideToggleModule} from '@angular/material/slide-toggle';\n// import {MatStepperModule} from '@angular/material/stepper';\n// import {MatTabsModule} from '@angular/material/tabs';\n// import {MatExpansionModule} from '@angular/material/expansion';\n// import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    // MatDatepickerModule,\n    // MatRadioModule,\n    // MatSelectModule,\n    // MatSliderModule,\n    // MatSlideToggleModule,\n    // MatStepperModule,\n    // MatTabsModule,\n    // MatExpansionModule,\n    // MatProgressSpinnerModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}