{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list-display/list-display.component.ts","webpack:///src/app/list-display/list-display.component.html","webpack:///src/app/main-page/main-page.component.ts","webpack:///src/app/main-page/main-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","snackBar","changeDetectorRef","media","title","menuTree","name","link","showInToolbar","toolbarMenu","filter","i","isLoading","fillerNav","Array","from","length","_","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","open","horizontalPosition","removeListener","element","document","getElementById","ws","table_to_sheet","wb","book_new","book_append_sheet","Date","toISOString","split","exportExcel","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","$event","stopPropagation","selection","ListDisplayComponent","displayedColumns","dataSource","SAMPLE_DATA","sort","numSelected","selected","numRows","data","isAllSelected","clear","forEach","row","select","isSelected","position","MainPageComponent","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAAED,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAHqB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIE;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAWJ;;;;;;AAOE;;AAAoH;;AAAY;;;;;;AAAnE;;AAAuD;;AAAA;;;;QDTzGQ,Y;;;AAcX,4BACUC,QADV,EAEEC,iBAFF,EAGEC,KAHF,EAGuB;AAAA;;AAFb,aAAAF,QAAA,GAAAA,QAAA;AAbV,aAAAG,KAAA,GAAQ,KAAR;AACA,aAAAC,QAAA,GAAW,CACT;AAAEC,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC,OAAnB;AAA4BC,uBAAa,EAAE;AAA3C,SADS,EAET;AAAEF,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SAFS,EAGT;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SAHS,EAIT;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SAJS,EAKT;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SALS,EAMT;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SANS,EAOT;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAC;AAAnB,SAPS,CAAX;AASA,aAAAE,WAAA,GAAc,KAAKJ,QAAL,CAAcK,MAAd,CAAqB,UAAAC,CAAC;AAAA,iBAAEA,CAAC,CAACH,aAAF,KAAkB,KAApB;AAAA,SAAtB,CAAd;AACA,aAAAI,SAAA,GAAY,KAAZ;AAgBA,aAAAC,SAAA,GAAYC,KAAK,CAACC,IAAN,CAAW;AAACC,gBAAM,EAAE;AAAT,SAAX,EAAyB,UAACC,CAAD,EAAIN,CAAJ;AAAA,oCAAsBA,CAAC,GAAG,CAA1B;AAAA,SAAzB,CAAZ;AAXE,aAAKO,WAAL,GAAmBf,KAAK,CAACgB,UAAN,CAAiB,oBAAjB,CAAnB;;AACA,aAAKC,oBAAL,GAA4B;AAAA,iBAAMlB,iBAAiB,CAACmB,aAAlB,EAAN;AAAA,SAA5B;;AACA,aAAKH,WAAL,CAAiBI,WAAjB,CAA6B,KAAKF,oBAAlC;AACD;;;;mCAEU;AACT,eAAKnB,QAAL,CAAcsB,IAAd,CAAmB,mDAAnB,EACE,IADF,EACQ;AAAEC,8BAAkB,EAAE;AAAtB,WADR;AAED;;;sCAOU;AACT,eAAKN,WAAL,CAAiBO,cAAjB,CAAgC,KAAKL,oBAArC;AACD;;;sCACa;AACZ;AACA,cAAIM,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAd;AACA,cAAMC,EAAE,GAAkB,2CAAWC,cAAX,CAA0BJ,OAA1B,CAA1B;AAEA;;AACA,cAAMK,EAAE,GAAkB,2CAAWC,QAAX,EAA1B;AACA,qDAAWC,iBAAX,CAA6BF,EAA7B,EAAiCF,EAAjC,EAAqC,eAArC;AAEA;;AACA,yDAAeE,EAAf,YAAsB,KAAK3B,KAA3B,cAAoC,IAAI8B,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAApC;AACD;;;;;;;uBA/CUpC,Y,EAAY,wI,EAAA,gI,EAAA,iI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA;AAAA;;;;;;;;;;;;;;;;;ACdzB;;AACE;;AAAwB;AAAA;;AAAA;;AAAA,mBAAS,aAAT;AAAsB,WAAtB;;AAA0C;;AAAU;;AAAI;;AAAW;;AAC3F;;AAAmC;;AAAI;;AAAQ;;AAE/C;;AAGA;;AAEA;;AAAuE;AAAA,mBAAS,IAAAqC,WAAA,EAAT;AAAsB,WAAtB;;AACrE;;AAAU;;AAAO;;AACnB;;AACA;;AACE;;AAAU;;AAAe;;AAC3B;;AACF;;AACA;;AAGA;;AACE;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACE;;AACF;;AACF;;;;AA1BkC;;AAAA;;AAYhB;;AAAA;;AAIG;;AAAA,sHAA8C,iBAA9C,EAA8C,uBAA9C;;AAGa;;AAAA;;;;;;;;;sEDTrBrC,Y,EAAY;cALxB,uDAKwB;eALd;AACTsC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;gBACtB,uD;iBAAU,S;;;;;;;;;;;;;;;;;;;;AEfbwD,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;QAwEaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAtCJ,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAVO,EAWP,4FAXO,EAYP,oEAZO,EAaP,4DAbO,EAcP,0DAdO,EAeP,qEAfO,EAgBP,wEAhBO,EAiBP,uEAjBO,EAkBP,qFAlBO,EAmBP,gFAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,2EAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,EAyBP,qEAzBO,EA0BP,sFA1BO,EA2BP,uEA3BO,EA4BP,qEA5BO,EA6BP,oFA7BO,EA8BP,yEA9BO,EA+BP,2EA/BO,EAgCP,8EAhCO,EAiCP,uEAjCO,EAkCP,qEAlCO,EAmCP,4EAnCO,EAoCP,+EApCO,CAsCI;;;;0HAGFA,S,EAAS;AAAA,uBA7ClB,2DA6CkB,EA5ClB,iFA4CkB,EA3ClB,0FA2CkB;AA3CE,kBAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAZoB,EAapB,4FAboB,EAcpB,oEAdoB,EAepB,4DAfoB,EAgBpB,0DAhBoB,EAiBpB,qEAjBoB,EAkBpB,wEAlBoB,EAmBpB,uEAnBoB,EAoBpB,qFApBoB,EAqBpB,gFArBoB,EAsBpB,qEAtBoB,EAuBpB,2EAvBoB,EAwBpB,2EAxBoB,EAyBpB,qEAzBoB,EA0BpB,8EA1BoB,EA2BpB,qEA3BoB,EA4BpB,sFA5BoB,EA6BpB,uEA7BoB,EA8BpB,qEA9BoB,EA+BpB,oFA/BoB,EAgCpB,yEAhCoB,EAiCpB,2EAjCoB,EAkCpB,8EAlCoB,EAmCpB,uEAnCoB,EAoCpB,qEApCoB,EAqCpB,4EArCoB,EAsCpB,+EAtCoB;AA2CF,O;AALA,K;;;;;sEAKTA,S,EAAS;cA/CrB,sDA+CqB;eA/CZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,iFAFY,EAGZ,0FAHY,CADN;AAMR3C,iBAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAVO,EAWP,4FAXO,EAYP,oEAZO,EAaP,4DAbO,EAcP,0DAdO,EAeP,qEAfO,EAgBP,wEAhBO,EAiBP,uEAjBO,EAkBP,qFAlBO,EAmBP,gFAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,2EAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,EAyBP,qEAzBO,EA0BP,sFA1BO,EA2BP,uEA3BO,EA4BP,qEA5BO,EA6BP,oFA7BO,EA8BP,yEA9BO,EA+BP,2EA/BO,EAgCP,8EAhCO,EAiCP,uEAjCO,EAkCP,qEAlCO,EAmCP,4EAnCO,EAoCP,+EApCO,CAND;AA4CR4C,mBAAS,EAAE,EA5CH;AA6CRC,mBAAS,EAAE,CAAC,2DAAD;AA7CH,S;AA+CY,Q;;;;;;;;;;;;;;;;;;AC3FtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOI;;AACI;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACJ;;;;;;AAJgB;;AAAA,qIAAmD,eAAnD,EAAmD,wDAAnD,EAAmD,YAAnD,EAAmD,uBAAnD;;;;;;;;AAKhB;;AACI;;AAAc;AAAA;;AAAA,iBAASC,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACjB,QAAAC,SAAA,gBADiB,GACO,IADP;AACW,SAD7C;;AAId;;AACJ;;;;;;;;AAHgB;;AAAA,mHAAqC,YAArC,EAAqC,8BAArC;;;;;;AAMhB;;AAAuD;;AAAI;;;;;;AAC3D;;AAAqC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIrC;;;;;;;;AACA;;AAA6D;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,SAAA,iBAAT;AAA8B,SAA9B;;AAAgC;;;;QDnBpFC,oB;;;AAEX,sCAAc;AAAA;;AAEd,aAAAC,gBAAA,GAA6B,CAAC,QAAD,EAAU,MAAV,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuBC,WAAvB,CAAb;AACA,aAAAJ,SAAA,GAAY,IAAI,uEAAJ,CAAwB,IAAxB,EAA8B,EAA9B,CAAZ;AAJiB;;;;mCAQT;AACN,eAAKG,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AAED;;;;wCACgB;AACd,cAAMC,WAAW,GAAG,KAAKN,SAAL,CAAeO,QAAf,CAAwBtC,MAA5C;AACA,cAAMuC,OAAO,GAAG,KAAKL,UAAL,CAAgBM,IAAhB,CAAqBxC,MAArC;AACA,iBAAOqC,WAAW,KAAKE,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKV,SAAL,CAAeW,KAAf,EADJ,GAEI,KAAKR,UAAL,CAAgBM,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,KAAI,CAACb,SAAL,CAAec,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAS;AACrB,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKV,SAAL,CAAee,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACG,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAlCUf,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;0EAQpB,8D,EAAS,I;;;;;;;;;;;;;;ACjBtB;;AAKI;;AACA;;AAOA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACJ;;;;AA7B8C;;AA2BvB;;AAAA,4GAAiD,uBAAjD,EAAiD,IAAjD;;AACP;;AAAA;;;;;;;;;sEDnBHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTV,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;gBAQ9B,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;AA6BtB,QAAMW,WAAW,GAAG,CAClB;AAAC7C,UAAI,EAAC;AAAN,KADkB,EAElB;AAACA,UAAI,EAAC;AAAN,KAFkB,EAGlB;AAACA,UAAI,EAAC;AAAN,KAHkB,EAIlB;AAACA,UAAI,EAAC;AAAN,KAJkB,EAKlB;AAACA,UAAI,EAAC;AAAN,KALkB,EAMlB;AAACA,UAAI,EAAC;AAAN,KANkB,EAOlB;AAACA,UAAI,EAAC;AAAN,KAPkB,EAQlB;AAACA,UAAI,EAAC;AAAN,KARkB,EASlB;AAACA,UAAI,EAAC;AAAN,KATkB,EAUlB;AAACA,UAAI,EAAC;AAAN,KAVkB,EAWlB;AAACA,UAAI,EAAC;AAAN,KAXkB,EAYlB;AAACA,UAAI,EAAC;AAAN,KAZkB,EAalB;AAACA,UAAI,EAAC;AAAN,KAbkB,EAclB;AAACA,UAAI,EAAC;AAAN,KAdkB,EAelB;AAACA,UAAI,EAAC;AAAN,KAfkB,EAgBlB;AAACA,UAAI,EAAC;AAAN,KAhBkB,EAiBlB;AAACA,UAAI,EAAC;AAAN,KAjBkB,EAkBlB;AAACA,UAAI,EAAC;AAAN,KAlBkB,EAmBlB;AAACA,UAAI,EAAC;AAAN,KAnBkB,EAoBlB;AAACA,UAAI,EAAC;AAAN,KApBkB,EAqBlB;AAACA,UAAI,EAAC;AAAN,KArBkB,EAsBlB;AAACA,UAAI,EAAC;AAAN,KAtBkB,EAuBlB;AAACA,UAAI,EAAC;AAAN,KAvBkB,EAwBlB;AAACA,UAAI,EAAC;AAAN,KAxBkB,EAyBlB;AAACA,UAAI,EAAC;AAAN,KAzBkB,EA0BlB;AAACA,UAAI,EAAC;AAAN,KA1BkB,EA2BlB;AAACA,UAAI,EAAC;AAAN,KA3BkB,EA4BlB;AAACA,UAAI,EAAC;AAAN,KA5BkB,EA6BlB;AAACA,UAAI,EAAC;AAAN,KA7BkB,EA8BlB;AAACA,UAAI,EAAC;AAAN,KA9BkB,EA+BlB;AAACA,UAAI,EAAC;AAAN,KA/BkB,EAgClB;AAACA,UAAI,EAAC;AAAN,KAhCkB,EAiClB;AAACA,UAAI,EAAC;AAAN,KAjCkB,EAkClB;AAACA,UAAI,EAAC;AAAN,KAlCkB,EAmClB;AAACA,UAAI,EAAC;AAAN,KAnCkB,EAoClB;AAACA,UAAI,EAAC;AAAN,KApCkB,CAApB;;;;;;;;;;;;;;;;AE/CA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0D,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,6/E;AAAA;AAAA;ACP9B;;AACI;;AACA;;AACI;;AACA;;AACA;;AACA;;AACA;;AAAkC;;AAAK;;AAAI;;AAAQ;;AACnD;;AAA0B;;AAAkB;;AAC5C;;AACI;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;;sED1BaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT1B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { ListDisplayComponent } from './list-display/list-display.component';\n\nconst routes: Routes = [\n  { path: '', component: MainPageComponent },\n  { path: 'index', component: MainPageComponent },\n  { path: '**', component: ListDisplayComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as XLSX from 'xlsx';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  title = '楓林晚';\n  menuTree = [\n    { name: '首頁', link:'index', showInToolbar: false },\n    { name: '電影', link:'movies' },\n    { name: '台劇', link:'taiwan' },\n    { name: '美劇', link:'usa' },\n    { name: '陸劇', link:'china' },\n    { name: '日劇', link:'japan' },\n    { name: '韓劇', link:'korea' },\n  ];\n  toolbarMenu = this.menuTree.filter(i=>i.showInToolbar!==false);\n  isLoading = false;\n  constructor(\n    private snackBar: MatSnackBar,\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit() {\n    this.snackBar.open('本網站使用cookies以提昇您的使用體驗及統計。繼續使用本網站表示您同意我們使用cookies。',\n      '同意', { horizontalPosition: 'right'});\n  }\n  mobileQuery: MediaQueryList;\n\n  fillerNav = Array.from({length: 50}, (_, i) => `Nav Item ${i + 1}`);\n\n  private _mobileQueryListener: () => void;\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  exportExcel() {\n    /* table id is passed over here */\n    let element = document.getElementById('main-data-table');\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Exported Data');\n\n    /* save to file */\n    XLSX.writeFile(wb, `${this.title}-${new Date().toISOString().split('T')[0]}.xlsx` );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button (click)=\"snav.toggle()\" class=\"hamburger\"><mat-icon>menu</mat-icon></button>\n  <span class=\"title\" routerLink=\"/\">楓林晚 </span> &nbsp;\n\n  <button mat-button class=\"link\" *ngFor=\"let item of toolbarMenu\" [routerLink]=\"item.link\" routerLinkActive=\"active-link\">\n    {{item.name}}\n  </button>\n  <span class=\"fill-remaining-space\"></span>\n\n  <button mat-icon-button class=\"toolbar-item\" matTooltip=\"Export Excel\" (click)=\"exportExcel()\">\n    <mat-icon>grid_on</mat-icon>\n  </button>\n  <button mat-icon-button class=\"toolbar-item\" matTooltip=\"Donate\">\n    <mat-icon>insert_emoticon</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n\n\n<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n  [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\n  <mat-nav-list>\n  <a mat-list-item routerLink=\".\" *ngFor=\"let nav of menuTree\" [routerLink]=\"nav.link\" routerLinkActive=\"active-link\">{{nav.name}}</a>\n  </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//Angular Material Components\n// import {MatDatepickerModule} from '@angular/material/datepicker';\n// import {MatRadioModule} from '@angular/material/radio';\n// import {MatSelectModule} from '@angular/material/select';\n// import {MatSliderModule} from '@angular/material/slider';\n// import {MatSlideToggleModule} from '@angular/material/slide-toggle';\n// import {MatStepperModule} from '@angular/material/stepper';\n// import {MatTabsModule} from '@angular/material/tabs';\n// import {MatExpansionModule} from '@angular/material/expansion';\n// import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { ListDisplayComponent } from './list-display/list-display.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent,\n    ListDisplayComponent\n  ],\n  imports: [\n    // MatDatepickerModule,\n    // MatRadioModule,\n    // MatSelectModule,\n    // MatSliderModule,\n    // MatSlideToggleModule,\n    // MatStepperModule,\n    // MatTabsModule,\n    // MatExpansionModule,\n    // MatProgressSpinnerModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-list-display',\n  templateUrl: './list-display.component.html',\n  styleUrls: ['./list-display.component.scss']\n})\nexport class ListDisplayComponent implements OnInit {\n\n  constructor() { }\n\n  displayedColumns: string[] = ['select','name'];\n  dataSource = new MatTableDataSource(SAMPLE_DATA);\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  ngOnInit(): void {\n    this.dataSource.sort = this.sort;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n\nconst SAMPLE_DATA = [\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n  {name:'Game of Thrones'},\n];\n","\n<table id=\"main-data-table\" mat-table matSort [dataSource]=\"dataSource\">\n<!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n        </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n        </mat-checkbox>\n    </td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.name}}</td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <div class=\"background hero\"></div>\n    <section id=\"intro\">\n        <div class=\"hero-logo\">\n        <img src=\"assets/images/logo.svg\" alt=\"Logo\" width=\"250\" height=\"250\">\n        </div>\n        <div class=\"homepage-container\">\n        <div class=\"hero-headline no-toc\">支持正版，<br>才有更棒的作品。</div>\n        <div class=\"hero-subline\">在這裡找尋您想看的影劇的所有合法片源</div>\n        <div class=\"hero-providers\">\n            <img src=\"assets/images/providers/1.jpg\" alt=\"Netflix\" matTooltip=\"Netflix\" class=\"provider\">\n            <img src=\"assets/images/providers/2.jpg\" alt=\"LINE TV\" matTooltip=\"LINE TV\" class=\"provider\">\n            <img src=\"assets/images/providers/3.jpg\" alt=\"愛奇藝台灣站\" matTooltip=\"愛奇藝台灣站\" class=\"provider\">\n            <img src=\"assets/images/providers/4.jpg\" alt=\"HBO GO\" matTooltip=\"HBO GO\" class=\"provider\">\n            <img src=\"assets/images/providers/5.jpg\" alt=\"KKTV\" matTooltip=\"KKTV\" class=\"provider\">\n            <img src=\"assets/images/providers/6.jpg\" alt=\"Apple TV+\" matTooltip=\"Apple TV+\" class=\"provider\">\n            <img src=\"assets/images/providers/7.jpg\" alt=\"GagaOOLala\" matTooltip=\"GagaOOLala\" class=\"provider\">\n            <img src=\"assets/images/providers/8.jpg\" alt=\"iTunes\" matTooltip=\"iTunes\" class=\"provider\">\n            <img src=\"assets/images/providers/9.jpg\" alt=\"YouTube\" matTooltip=\"YouTube\" class=\"provider\">\n            <img src=\"assets/images/providers/10.jpg\" alt=\"Google Play電影\" matTooltip=\"Google Play電影\" class=\"provider\">\n            <img src=\"assets/images/providers/11.jpg\" alt=\"CATCHPLAY+\" matTooltip=\"CATCHPLAY+\" class=\"provider\">\n            <img src=\"assets/images/providers/12.jpg\" alt=\"friDay影音\" matTooltip=\"friDay影音\" class=\"provider\">\n            <img src=\"assets/images/providers/13.jpg\" alt=\"Hami Video\" matTooltip=\"Hami Video\" class=\"provider\">\n            <img src=\"assets/images/providers/14.jpg\" alt=\"公視+\" matTooltip=\"公視+\" class=\"provider\">\n            <img src=\"assets/images/providers/15.jpg\" alt=\"LiTV立視線上影視\" matTooltip=\"LiTV立視線上影視\" class=\"provider\">\n            <img src=\"assets/images/providers/16.jpg\" alt=\"myVideo\" matTooltip=\"myVideo\" class=\"provider\">\n            <img src=\"assets/images/providers/17.jpg\" alt=\"Vidol影音\" matTooltip=\"Vidol影音\" class=\"provider\">\n            <img src=\"assets/images/providers/18.jpg\" alt=\"WeTV\" matTooltip=\"WeTV\" class=\"provider\">\n            <img src=\"assets/images/providers/19.jpg\" alt=\"四季線上影視\" matTooltip=\"四季線上影視\" class=\"provider\">\n            <img src=\"assets/images/providers/20.jpg\" alt=\"酷瞧\" matTooltip=\"酷瞧\" class=\"provider\">\n        </div>\n        </div>\n    </section>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}